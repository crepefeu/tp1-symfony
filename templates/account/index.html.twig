{# templates/user/profile.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Mon compte{% endblock %}

{% block stylesheets %}
    {{ parent() }}
{% endblock %}

{% block body %}
	<div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
		{% for message in app.flashes('success') %}
			<div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4">
				{{ message }}
			</div>
		{% endfor %}

		<div class="bg-white shadow overflow-hidden sm:rounded-lg mb-6 border">
			<div class="px-4 py-5 sm:px-6 flex justify-between items-center">
				<h3 class="text-lg leading-6 font-medium text-gray-900">Informations du compte</h3>
				<button onclick="toggleEdit()" id="editButton" class="text-indigo-600 hover:text-indigo-900">
					<span id="editButtonText">Modifier</span>
				</button>
			</div>

			{{ form_start(form, {'attr': {'id': 'profileForm'}}) }}
			<div class="border-t border-gray-200">
				<dl>
					<div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
						<dt class="text-sm font-medium text-gray-500">Prénom</dt>
						<dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
							<span class="view-mode">{{ app.user.firstName }}</span>
							<div class="edit-mode hidden">
								{{ form_widget(form.firstName, {
                                'attr': {
                                    'class': 'mt-1 block w-full rounded-md border-gray-300 shadow-sm px-3 py-2 bg-white focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 focus:ring-opacity-50 transition-all duration-150 ease-in-out text-gray-700 hover:border-indigo-300',
                                    'placeholder': 'Votre prénom'
                                }
                            }) }}
							</div>
						</dd>
					</div>
					<div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
						<dt class="text-sm font-medium text-gray-500">Nom</dt>
						<dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
							<span class="view-mode">{{ app.user.lastName }}</span>
							<div class="edit-mode hidden">
								{{ form_widget(form.lastName, {
                                'attr': {
                                    'class': 'mt-1 block w-full rounded-md border-gray-300 shadow-sm px-3 py-2 bg-white focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 focus:ring-opacity-50 transition-all duration-150 ease-in-out text-gray-700 hover:border-indigo-300',
                                    'placeholder': 'Votre nom'
                                }
                            }) }}
							</div>
						</dd>
					</div>
					<div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
						<dt class="text-sm font-medium text-gray-500">Email</dt>
						<dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
							<span class="view-mode">{{ app.user.email }}</span>
							<div class="edit-mode hidden">
								{{ form_widget(form.email, {
                                'attr': {
                                    'class': 'mt-1 block w-full rounded-md border-gray-300 shadow-sm px-3 py-2 bg-white focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 focus:ring-opacity-50 transition-all duration-150 ease-in-out text-gray-700 hover:border-indigo-300',
                                    'placeholder': 'votre@email.com'
                                }
                            }) }}
							</div>
						</dd>
					</div>
					<div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
						<dt class="text-sm font-medium text-gray-500">Mot de passe</dt>
						<dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
							<span class="view-mode">*********</span>
							<div class="edit-mode hidden">
								{{ form_widget(form.plainPassword, {
                                'attr': {
                                    'class': 'mt-1 block w-full rounded-md border-gray-300 shadow-sm px-3 py-2 bg-white focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 focus:ring-opacity-50 transition-all duration-150 ease-in-out text-gray-700 hover:border-indigo-300',
                                    'placeholder': 'Nouveau mot de passe'
                                }
                            }) }}
							</div>
						</dd>
					</div>
					<div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
						<dt class="text-sm font-medium text-gray-500">Téléphone</dt>
						<dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
							<span class="view-mode">{{ app.user.phone }}</span>
							<div class="edit-mode hidden">
								{{ form_widget(form.phone, {
                                'attr': {
                                    'class': 'mt-1 block w-full rounded-md border-gray-300 shadow-sm px-3 py-2 bg-white focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 focus:ring-opacity-50 transition-all duration-150 ease-in-out text-gray-700 hover:border-indigo-300',
                                    'placeholder': 'Votre numéro de téléphone'
                                }
                            }) }}
							</div>
						</dd>
					</div>
				</dl>
			</div>
			<div class="edit-mode hidden bg-gray-50 px-4 py-5">
				<div class="flex justify-end space-x-4">
					<button type="submit" 
                class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white 
                       bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500
                       transition duration-150 ease-in-out transform hover:scale-105">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
            </svg>
            Sauvegarder
        </button>
        <button type="button" 
                onclick="toggleEdit()" 
                class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 
                       bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500
                       transition duration-150 ease-in-out">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 111.414 1.414L11.414 10l4.293 4.293a1 1 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 01-1.414-1.414L8.586 10 4.293 5.707a1 1 010-1.414z" clip-rule="evenodd"/>
            </svg>
            Annuler
        </button>
				</div>
			</div>
			{{ form_end(form) }}
		</div>

		{# Reservations Section #}
		<div class="bg-white shadow overflow-hidden sm:rounded-lg border">
			<div class="px-4 py-5 sm:px-6">
				<h3 class="text-lg leading-6 font-medium text-gray-900">Mes réservations</h3>
				<p class="mt-1 text-sm text-gray-500">Historique de vos réservations</p>
			</div>
			<div class="border-t border-gray-200">
				{% if app.user.reservations|length > 0 %}
					<div class="overflow-x-auto">
						<table class="min-w-full divide-y divide-gray-200">
							<thead class="bg-gray-50">
								<tr>
									<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Restaurant</th>
									<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
									<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Personnes</th>
									<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Statut</th>
									<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
								</tr>
							</thead>
							<tbody class="bg-white divide-y divide-gray-200">
								{% for reservation in app.user.reservations|sort((a, b) => b.dateTime <=> a.dateTime) %}
									<tr>
										<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
											{{ reservation.restaurant.name }}
										</td>
										<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
											{{ reservation.dateTime|date('d/m/Y H:i') }}
										</td>
										<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
											{{ reservation.numberOfGuests }}
										</td>
										<td class="px-6 py-4 whitespace-nowrap">
											<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full
												{% if reservation.status == constant('App\\Enum\\ReservationStatus::PENDING') %}
													bg-yellow-100 text-yellow-800
												{% elseif reservation.status == constant('App\\Enum\\ReservationStatus::CONFIRMED') %}
													bg-green-100 text-green-800
												{% elseif reservation.status == constant('App\\Enum\\ReservationStatus::CANCELLED') %}
													bg-red-100 text-red-800
												{% else %}
													bg-gray-100 text-gray-800
												{% endif %}">
												{{ reservation.status.label }}
											</span>
										</td>
										<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
											<a href="{{ path('app_reservation_show', {'id': reservation.id}) }}" 
											   class="text-indigo-600 hover:text-indigo-900">Voir détails</a>
										</td>
									</tr>
								{% endfor %}
							</tbody>
						</table>
					</div>
				{% else %}
					<div class="px-6 py-4 text-center text-gray-500">
						<p>Vous n'avez pas encore de réservations.</p>
						<a href="{{ path('app_restaurant_index') }}" 
						   class="mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700">
							Réserver une table
						</a>
					</div>
				{% endif %}
			</div>
		</div>
	</div>

	{% block javascripts %}
		<script>
			function toggleEdit() {
                const viewModeElements = document.querySelectorAll('.view-mode');
                const editModeElements = document.querySelectorAll('.edit-mode');
                const editButtonText = document.getElementById('editButtonText');

                viewModeElements.forEach(el => el.classList.toggle('hidden'));
                editModeElements.forEach(el => el.classList.toggle('hidden'));

                if (editButtonText.textContent === 'Modifier') {
                editButtonText.textContent = 'Annuler';
                } else {
                editButtonText.textContent = 'Modifier';
                }
            }
		</script>
	{% endblock %}
{% endblock %}
